// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  userName   String      @unique
  email      String      @unique
  password   String
  role       userRole
  status     userStatus  @default(ACTIVE)
  createdAt  DateTime    @default(now())
  upodatedAt DateTime    @updatedAt
  Admin      Admin?
  LostItem   LostItem[]
  FoundItem  FoundItem[]
  Claim      Claim[]

  @@map("users")
}

model Admin {
  id         String     @id @default(uuid())
  userName   String     @unique
  email      String     @unique
  password   String
  role       userRole
  status     userStatus @default(ACTIVE)
  createdAt  DateTime   @default(now())
  upodatedAt DateTime   @updatedAt
  user       User       @relation(fields: [email], references: [email])

  @@map("admins")
}

model LostItem {
  id            String           @id @default(uuid())
  title         String
  date          String
  status        lostItemStatus
  category      lostItemCategory
  contactNumber String
  email         String
  color         String
  brand         String
  location      String
  description   String
  uploadImage   String           @default("")
  createdAt     DateTime         @default(now())
  upodatedAt    DateTime         @updatedAt
  userId        String
  user          User             @relation(fields: [userId], references: [id])

  @@map("lostitems")
}

model FoundItem {
  id            String           @id @default(uuid())
  title         String
  date          String
  status        lostItemStatus
  category      lostItemCategory
  contactNumber String
  color         String
  email         String
  brand         String
  location      String
  description   String
  uploadImage   String           @default("")
  createdAt     DateTime         @default(now())
  upodatedAt    DateTime         @updatedAt
  userId        String
  user          User             @relation(fields: [userId], references: [id])

  @@map("founditems")
}

model Claim {
  id          String      @id @default(uuid())
  description String
  location    String
  details     String
  status      claimStatus @default(pending)
  uploadImage String      @default("")
  lostDate    String
  createdAt   DateTime    @default(now())
  upodatedAt  DateTime    @updatedAt
  userId      String
  user        User        @relation(fields: [userId], references: [id])

  @@map("claims")
}

enum userRole {
  SUPPER_ADMIN
  ADMIN
  USER
}

enum userStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum lostItemStatus {
  LOST
  FOUND
}

enum lostItemCategory {
  Walet
  Key
  Mobail
  Laptop
  Bike
  Car
  Others
}

enum claimStatus {
  pending
  approved
  rejected
}
